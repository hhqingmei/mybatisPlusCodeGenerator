package ${package.Controller};
import ${package.Entity}.${entity};
import ${package.Service}.${table.serviceName};
import org.springframework.web.bind.annotation.*;

#if(${swagger2})
import io.swagger.annotations.ApiOperation;
#end
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.google.common.collect.Lists;
import java.util.List;
import javax.annotation.Resource;
import javax.validation.constraints.NotNull;
import javax.validation.groups.Default;
import org.springframework.validation.annotation.Validated;

#if(${restControllerStyle})
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 *
 * $!{table.comment} 前端控制器
 * @author ${author}
 * @since ${date}
 */
#if(${swagger2})
@Api(value = ${entity})
#end

#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@Api(value = "${table.comment}")
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
    #if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
    #else
public class ${table.controllerName} {
    #end
@Resource
        private ${table.serviceName} ${table.entityPath}Service;

        @ApiOperation(value = "分页获取")
        @GetMapping("/get${entity}ListPage")
        public Page<${entity}> get${entity}ListPage(${entity} ${table.entityPath}) {
            return this.${table.entityPath}Service.get${entity}PageList(${table.entityPath});
        }

        @ApiOperation(value = "新增${table.comment}")
        @PostMapping("/create${entity}")
        public String create${entity}(@Validated({Default.class}) ${entity} ${table.entityPath}) {
            return this.${table.entityPath}Service.create${entity}(${table.entityPath});
        }

        @ApiOperation(value = "编辑${table.comment}")
        @PostMapping("/update${entity}")
        public String update${entity}(@Validated({Default.class}) ${entity} ${table.entityPath}) {
            return this.${table.entityPath}Service.update${entity}(${table.entityPath});
        }

        @ApiOperation(value = "删除${table.comment}")
        @GetMapping("/delete${entity}")
        public String delete${entity}(@NotNull(message = "${table.comment}id不能为空") String id) {
            this.${table.entityPath}Service.batchDelete${entity}(Lists.newArrayList(id));
            return "删除成功";
        }


        @ApiOperation(value = "批量删除${table.comment}")
        @GetMapping("/batchDelete${entity}")
        public String batchDelete${entity}(@NotNull(message = "${table.comment}id不能为空") @RequestParam List<String> ids) {
            this.${table.entityPath}Service.batchDelete${entity}(ids);
            return "删除成功";
        }

    }
#end